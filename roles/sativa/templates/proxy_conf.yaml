BASE: https://{{ sativa_server_hostname }}

COOKIE_STATE_NAME: "SATOSA_STATE"
CONTEXT_STATE_DELETE: yes

cookies_samesite_compat:
  - ["SATOSA_STATE", "SATOSA_STATE_LEGACY"]

INTERNAL_ATTRIBUTES: "{{ satosa_configmap_mountpoint }}/internal_attributes.yaml"

BACKEND_MODULES:
  - "{{ satosa_configmap_mountpoint }}/saml2_backend.yaml"

FRONTEND_MODULES:
  - "{{ satosa_configmap_mountpoint }}/saml2_frontend.yaml"

MICRO_SERVICES:
  - "{{ satosa_configmap_mountpoint }}/ivalua_account_activation_microservice.yaml"

CUSTOM_PLUGIN_MODULE_PATHS:
  - "{{ satosa_configmap_mountpoint }}/"


LOGGING:
  version: 1
  formatters:
    simple:
      format: "[%(asctime)s] [%(levelname)s] [%(name)s.%(funcName)s] %(message)s"
  handlers:
    stdout:
      class: logging.StreamHandler
      stream: "ext://sys.stdout"
      level: "{{ "DEBUG" if inventory_environment == "test" else "INFO" }}"
      formatter: simple
    syslog:
      class: logging.handlers.SysLogHandler
      address: "/dev/log"
      level: "INFO"
      formatter: simple
    debug_file:
      class: logging.FileHandler
      filename: satosa-debug.log
      encoding: utf8
      level: "INFO"
      formatter: simple
    error_file:
      class: logging.FileHandler
      filename: satosa-error.log
      encoding: utf8
      level: ERROR
      formatter: simple
    info_file:
      class: logging.handlers.RotatingFileHandler
      filename: satosa-info.log
      encoding: utf8
      maxBytes: 10485760 # 10MB
      backupCount: 20
      level: "INFO"
      formatter: simple
  loggers:
    satosa:
      level: "DEBUG"
    saml2:
      level: "DEBUG"
    oidcendpoint:
      level: "DEBUG"
    pyop:
      level: "DEBUG"
    oic:
      level: "DEBUG"
    ivalua_account_activation_microservice:
      level: "DEBUG"
  root:
    level: "INFO"  # Lest we leak e.g. secrets as part of API URLs
    handlers:
      - stdout
